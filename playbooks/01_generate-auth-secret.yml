# playbooks/01_generate-auth-secret.yml
# 🔐 Genera el Secret básico cifrado y lo sella con kubeseal

- name: 🔐 Generar y cifrar Secret del Dashboard
  hosts: localhost
  gather_facts: false

  vars_files:
    - ../vars/main.yml

  vars:
    files_dir: "{{ playbook_dir }}/files"
    kubeseal_path: "/usr/local/bin/kubeseal"
    kubectl_path: "/usr/local/bin/kubectl"
    python_bin: "/usr/bin/python3"
    rendered_secret_path: "{{ files_dir }}/longhorn-dashboard-secret.yaml"
    sealed_secret_path: "{{ files_dir }}/longhorn-dashboard-sealed.yaml"

  tasks:
    - name: ✅ Verificar que kubeseal está instalado
      stat:
        path: "{{ kubeseal_path }}"
      register: kubeseal_check

    - name: ❌ Abortamos si kubeseal no está instalado
      fail:
        msg: "kubeseal no encontrado en {{ kubeseal_path }}"
      when: not kubeseal_check.stat.exists

    - name: ✅ Verificar que kubectl está instalado
      stat:
        path: "{{ kubectl_path }}"
      register: kubectl_check

    - name: ❌ Abortamos si kubectl no está instalado
      fail:
        msg: "kubectl no encontrado en {{ kubectl_path }}"
      when: not kubectl_check.stat.exists

    - name: 📁 Crear directorio local para secrets si no existe
      file:
        path: "{{ files_dir }}"
        state: directory
        mode: "0755"

    - name: 🔐 Generar hash htpasswd (basicAuth con MD5)
      command: >
        {{ python_bin }} -c "import crypt; print('{{ longhorn_auth_user }}:' + crypt.crypt('{{ longhorn_auth_pass }}', crypt.mksalt(crypt.METHOD_MD5)))"
      register: htpasswd_output
      changed_when: true
      failed_when: htpasswd_output.rc != 0 or htpasswd_output.stdout == ""

    - name: 🔐 Codificar el hash en base64
      set_fact:
        basic_auth: "{{ htpasswd_output.stdout | b64encode }}"

    - name: 📄 Renderizar plantilla Secret
      template:
        src: templates/secrets/basic-auth-secret.yaml.j2
        dest: "{{ rendered_secret_path }}"
      vars:
        namespace_tpl: "{{ longhorn_namespace }}"

    - name: 🔐 Sellar con kubeseal → YAML
      command: >
        {{ kubeseal_path }} --format yaml < "{{ rendered_secret_path }}" > "{{ sealed_secret_path }}"